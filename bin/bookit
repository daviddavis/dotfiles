#!/usr/bin/env ruby

require "rubygems"
require "thor"

class Bookit < Thor
  default_task :split

  desc "convert [FILES] [OUTPUT]", "convert some FILES to an m4b file named OUTPUT"
  method_options stop_open: :string
  def combined(file_reg = "*.mp3", output = nil)
    output ||= File.basename(Dir.pwd)
    temp_mp3 = "temp#{Time.now.to_i}.mp3"

    say "Combining mp3s...", :green
    `cat #{file_reg} > #{temp_mp3}`

    say "Creating wav file", :green
    wav = convert_mp3_to_wav(temp_mp3)
    `rm #{temp_mp3}`

    say "Creating m4b file...", :green
    convert_mp3_to_m4b(wav, output)
    `rm #{wav}`

    open_with_itunes("#{output}.m4b") unless options[:stop_open]

    say "Done!", :green
  end

  desc "shortcut", "convert all mp3s to m4b files without making wavs"
  def shortcut
    mp3s = Dir["*.mp3"]
    mp3s.each do |mp3|
      say "Creating a m4b for #{mp3}", :green
      m4b = convert_mp3_to_m4b(mp3)
      open_with_itunes(m4b)
    end
    say "Done!", :green
  end

  desc "split", "convert mp3s to m4b with one m4b per mp3"
  def split
    mp3s = Dir["*.mp3"]
    mp3s.each do |mp3|
      say "Converting #{mp3}", :green
      wav = convert_mp3_to_wav(mp3)
      m4b = convert_mp3_to_m4b(wav, File.basename(mp3, ".mp3"))
      `rm \"#{wav}\"`
      open_with_itunes(m4b)
    end
  end

  private

    def open_with_itunes(file)
      `open \"#{file}\"`
      stop_itunes
    end

    def stop_itunes
      `osascript -e 'tell application "iTunes"' -e "pause" -e "end tell" 2>/dev/null`
    end

    def convert_mp3_to_m4b(mp3, output = File.basename(mp3, ".mp3"))
      ffmpeg_convert(mp3, "#{output}.m4a", "-acodec libfaac")
      `mv \"#{output}.m4a\" \"#{output}.m4b\"`
      return "#{output}.m4b"
    end

   def convert_mp3_to_wav(mp3)
      filename = File.basename(mp3, ".mp3") + ".wav"
      ffmpeg_convert(mp3, filename)
      return filename
   end

   def ffmpeg_convert(input, output, flags = "")
     `ffmpeg -i \"#{input}\" #{flags} \"#{output}\"`
   end
end

Bookit.start